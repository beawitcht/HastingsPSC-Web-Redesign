function updateBlockFields(blockDiv) {
    const typeSelect = blockDiv.querySelector('.block-type');
    const contentLabel = blockDiv.querySelector('.content-label');
    const contentInput = blockDiv.querySelector('.block-content');
    const imageUrlLabel = blockDiv.querySelector('.image-url-label');
    const imageUrlInput = blockDiv.querySelector('.block-image-url');
    const altTextLabel = blockDiv.querySelector('.alt-text-label');
    const altTextInput = blockDiv.querySelector('.block-alt-text');
    if (!typeSelect) return;

    const val = typeSelect.value;

    // Helper to toggle visibility and disable state
    function setVisibility(el , show) {
        if (!el) return;
        if (show) {
            el.classList.remove("no-display");
            el.disabled = false;
        } else {
            el.classList.add("no-display");
            el.disabled = true;
        }
    }

    // Update label text first
    if (val === "figure") {
        contentLabel.textContent = "Caption";
    } else {
        contentLabel.textContent = "Content";
    }

     if (val === "image") {
            // no content field needed
            setVisibility(contentLabel, false);
            setVisibility(contentInput, false);
            
            // add url field
            setVisibility(imageUrlLabel, true);
            setVisibility(imageUrlInput, true);

            // add alt text field
            setVisibility(altTextLabel, true);
            setVisibility(altTextInput, true);

        } else if (val === "figure") {

            // use content label
            contentLabel.textContent = "Caption";
            setVisibility(contentLabel, true);
            setVisibility(contentInput, true);

            // caption field
            setVisibility(imageUrlLabel, true);
            setVisibility(imageUrlInput, true);

             // add alt text field for image
            setVisibility(altTextLabel, true);
            setVisibility(altTextInput, true);

        } else {
            // use content label nothing else
            contentLabel.textContent = "Content";
            setVisibility(contentLabel, true);
            setVisibility(contentInput, true);

            setVisibility(imageUrlLabel, false);
            setVisibility(imageUrlInput, false);

            setVisibility(imageUrlLabel, false);
            setVisibility(imageUrlInput, false);
        }  
}
document.addEventListener("DOMContentLoaded", function () {

    const addBlockBtn = document.getElementById("add-block-btn");
    const blockContainer = document.getElementById("blocks-container"); // where blocks are added
    const blockTemplate = document.getElementById("block-template");
    let currentIndex = 0;

    // Attach change listener to dropdown
    const initTypeSelect = blockContainer.querySelector(".block-type");
    initTypeSelect.addEventListener("change", function () {
        updateBlockFields(blockContainer);
    });

    // Try to initialize index from existing blocks
    const existingBlocks = document.querySelectorAll(".article-block");
    if (existingBlocks.length) {
        if (existingBlocks.length > 0) {
            currentIndex = existingBlocks.length - 1;
        }

    }

    addBlockBtn.addEventListener("click", function (e) {
        e.preventDefault();

        // Clone the hidden template
        const newBlock = blockTemplate.cloneNode(true);
        newBlock.classList.remove("no-display");

        // Replace all instances of __INDEX__ with the current index
        const html = newBlock.innerHTML.replace(/__INDEX__/g, currentIndex);
        newBlock.innerHTML = html;

        newBlock.id = `block-${currentIndex}`;

        // Attach change listener to dropdown
        const typeSelect = newBlock.querySelector(".block-type");
        typeSelect.addEventListener("change", function () {
            updateBlockFields(newBlock);
        });


        blockContainer.appendChild(newBlock);

        currentIndex++;
    });
});